version: 2
project_name: mokapi
builds:
  - env:
      - CGO_ENABLED=0
    ldflags:
      - -s
      - -w
      - -X mokapi/version.BuildVersion={{ .Version }}
      - -X mokapi/version.BuildTime={{ .Date }}
    main: ./cmd/mokapi
    goos:
      - windows
    goarch:
      - amd64
archives:
  - name_template: '{{ .ProjectName }}_v{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    formats: [ 'zip' ]
checksum:
  name_template: "{{ .ProjectName }}_v{{ .Version }}_windows_checksums.txt"
snapshot:
  version_template: "{{ .Version }}"

chocolateys:
  - name: mokapi
    owners: Marcel Lehmann
    title: Mokapi
    authors: Marcel Lehmann
    project_url: https://mokapi.io
    package_source_url: https://github.com/marle3003/mokapi
    icon_url: https://cdn.jsdelivr.net/gh/marle3003/mokapi/webui/public/logo.svg
    copyright: 2021 Marcel Lehmann
    license_url: https://raw.githubusercontent.com/marle3003/mokapi/main/LICENSE
    require_license_acceptance: false
    project_source_url: https://github.com/marle3003/mokapi
    docs_url: https://mokapi.io/docs/guides
    bug_tracker_url: https://github.com/marle3003/mokapi/issues
    tags: "cross-platform testing devops api mock http kafka rest smtp ldap contract openapi asyncapi"
    summary: Your API Mocking Tool for Agile Development using Go and Javascript
    description: |
      <p align="center">
      <a href="https://mokapi.io">
      <img src="https://raw.githubusercontent.com/marle3003/mokapi/refs/heads/main/logo.svg" alt="Mokapi" title="Mokapi" width="300" />
      </a>
      </p>
      
      <h3 align="center">Your API Mocking Tool for Agile Development</h3>
      
      # üöÄ Overview
      
      Mokapi is an open-source tool that helps Agile, DevOps, and Continuous
      Deployment teams design, test, and validate APIs before implementation.
      It enables rapid prototyping of scenarios‚Äîlike delayed responses,
      failures, or edge cases‚Äîwithout needing a live backend. By simulating
      real-world conditions early, Mokapi improves API quality and reduces
      the risk of bugs in production.
    
      # ‚ú® Features
      
      - **Multiple Protocol support**: HTTP, HTTPS, Apache Kafka, SMTP, LDAP
      - **Everything as Code**: Reusing, version control, consistency and integrate mocks with your CI/CD.
      - **An embedded JavaScript engine** to control everything - status, headers, delays, errors or other edge cases.
      - **Patch Configuration** changes for mocking needs, rather than changing the original contract
      - **Multiple Provider support**: File, HTTP, GIT, NPM to gather configurations and scripts.
      - **Dashboard** to see what's going on.
      
      ## üîß Spin Up Mokapi
        
      Install and start Mokapi using one of the following methods.
      Replace the URL with your own OpenAPI or AsyncAPI specification.
      
      Windows
      ```shell
      choco install mokapi
      mokapi https://petstore31.swagger.io/api/v31/openapi.json
      ```
      
      MacOS
      ```shell
      brew tap marle3003/tap
      brew install mokapi
      mokapi https://petstore31.swagger.io/api/v31/openapi.json
      ```
      
      Docker
      ```shell
      docker run -p 80:80 -p 8080:8080 mokapi/mokapi:latest https://petstore31.swagger.io/api/v31/openapi.json
      ```
      
      # üéØ Hit Your First Mock
      Once Mokapi is running, you can make requests to your mocked API like so:
      ```shell
      curl http://localhost/api/v31/pet/2 -H 'Accept: application/json'
      ```
        
      # üß© Customize Your Mock with JavaScript
      
      Mokapi makes it simple to control responses using embedded JavaScript.
      
      For example, you can dynamically change the response based on query parameters:
        
      ```typescript
      import { on } from 'mokapi';
        
      export default function() {
        on('http', (request, response): boolean => {
          switch (request.path.petId) {
            case 2:
              response.data.name = 'Betty';
                return true;
            case 9:
              response.statusCode = 404;
          }
          return false;
        });
      }
      ```
        
      # üñ•Ô∏è Dashboard
        
      Mokapi‚Äôs dashboard lets you visualize your mock APIs. View requests and responses in real-time, generate and validate sample data for testing.
        
      <img src="https://raw.githubusercontent.com/marle3003/mokapi/refs/heads/main/webui.png" alt="Mokapi Web UI" title="Mokapi Web UI" />
      
      # üß™ Learn by Example
      
      Explore tutorials that walk you through mocking different protocols and scenarios:
      
      - üåç [Get started with REST API](https://mokapi.io/docs/resources/tutorials/get-started-with-rest-api)\
        This tutorial will show you how to mock a REST API using an OpenAPI specification.
      
      - ‚ö° [Mocking Kafka with AsyncAPI](https://mokapi.io/docs/resources/tutorials/get-started-with-kafka)\
        Mocking a Kafka topic using Mokapi and verifying that a producer generates valid messages.
      
      - üë®‚Äçüíª [Mocking LDAP Authentication](https://mokapi.io/docs/resources/tutorials/mock-ldap-authentication-in-node)\
        Simulate LDAP-based login flows, including group-based permissions.
      
      - üìß [Mocking SMTP Mail Servers](https://mokapi.io/docs/resources/tutorials/mock-smtp-server-send-mail-using-node)\
        Use Mokapi to simulate sending and receiving emails in Node.js apps.
      
      - üñ•Ô∏è [End-to-End Testing with Jest and GitHub Actions](https://mokapi.io/docs/resources/tutorials/running-mokapi-in-a-ci-cd-pipeline)\
        Integrate Mokapi into your CI pipeline for full-stack E2E testing.
        
      > More examples are available on [mokapi.io/docs/resources](https://mokapi.io/docs/resources)
      
      # üìö Documentation
      
      - [Get Started](https://mokapi.io/docs/guides/welcome)
      - [HTTP](https://mokapi.io/docs/guides/http)
      - [Kafka](https://mokapi.io/docs/guides/kafka/overview)
      - [LDAP](https://mokapi.io/docs/guides/ldap/overview)
      - [SMTP](https://mokapi.io/docs/guides/smtp/overview)
      - [Javascript API](https://mokapi.io/docs/javascript-api)
      - [Examples & Tutorials](https://mokapi.io/docs/resources)
      - [Blogs](https://mokapi.io/docs/blogs)
      
      # ‚òï Support
      
      If you find Mokapi helpful, consider supporting the project:
      
      <a href="https://www.buymeacoffee.com/mokapi" target="_blank"><img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee" style="height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;" ></a>
      
      # üìÑ License
      
      This project is licensed under the MIT License. See the [LICENSE](https://github.com/marle3003/mokapi/blob/main/LICENSE) file for details.
      ```
    release_notes: "https://github.com/marle3003/mokapi/releases/tag/v{{ .Version }}"

    url_template: "https://github.com/marle3003/mokapi/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    api_key: "{{ .Env.CHOCOLATEY_API_KEY }}"
    source_repo: "https://push.chocolatey.org/"
    skip_publish: false
