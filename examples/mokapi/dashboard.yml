openapi: 3.0.1
info:
  title: Mokapi's Dashboard API
  version: v1
servers:
  - url: http://localhost:8090
paths:
  /api/info:
    get:
      summary: get information about mokapi's runtime
      operationId: info
      responses:
        "200":
          description: the information about mokapi's runtime
          content:
            application/json:
              schema:
                $ref: 'common.yml#/components/schemas/Info'
  /api/services:
    get:
      summary: list of all services
      operationId: services
      responses:
        "200":
          description: the list of services
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: 'http.yml#/components/schemas/HttpInfo'
                    - $ref: 'kafka.yml#/components/schemas/KafkaInfo'
  /api/services/http/{name}:
    get:
      summary: Information about the http service
      operationId: serviceHttp
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: http service
          content:
            application/json:
              schema:
                $ref: 'http.yml#/components/schemas/HttpInfo'
  /api/services/kafka/{name}:
    get:
      summary: Information about the kafka cluster
      operationId: serviceKafka
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: name of kafka cluster
          content:
            application/json:
              schema:
                $ref: 'kafka.yml#/components/schemas/Kafka'
  /api/services/smtp/{name}:
    get:
      summary: Information about the smtp server
      operationId: serviceSmtp
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: name of kafka cluster
          content:
            application/json:
              schema:
                $ref: 'smtp.yml#/components/schemas/SmtpInfo'
  /api/services/ldap/{name}:
    get:
      summary: Information about the ldap server
      operationId: serviceLdap
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ldap server
          content:
            application/json:
              schema:
                $ref: 'ldap.yml#/components/schemas/LdapInfo'
  /api/services/smtp/mails/{messageId}:
    get:
      summary: Retrieve the mail with the given messageId
      operationId: smtpMail
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: mail
          content:
            application/json:
              schema:
        "404":
          description: mail not found
  /api/services/smtp/mails/{messageId}/attachments/{name}:
    get:
      summary: Retrieve mail attachment's content
      operationId: smtpMailAttachment
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: mail
          content:
            '*/*':
              schema:
        "404":
          description: mail attachment not found
  /api/services/kafka/{name}/groups:
    get:
      summary: list of kafka groups
      operationId: serviceKafka
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: name of kafka cluster
          content:
            application/json:
              schema:
                $ref: 'kafka.yml#/components/schemas/Kafka'
  /api/events:
    get:
      summary: list of events
      operationId: events
      parameters:
        - name: traits
          in: query
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        "200":
          description: name of kafka cluster
          content:
            application/json:
              schema:
                $ref: 'common.yml#/components/schemas/Events'
  /api/events/{id}:
    get:
      summary: Information about the kafka cluster
      operationId: event
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: name of kafka cluster
          content:
            application/json:
              schema:
                $ref: 'common.yml#/components/schemas/Event'
        "404":
          description: no event exists for specified id
  /api/metrics:
    get:
      summary: get list of metrics
      operationId: metrics
      parameters:
        - in: query
          name: query
          schema:
            type: string
      responses:
        "200":
          description: a list of metrics
          content:
            application/json:
              schema:
                $ref: 'common.yml#/components/schemas/Metrics'
  /api/schema/example:
    post:
      summary: returns example for given schema
      operationId: example
      requestBody:
        required: true
        content:
          application/json:
            schema: {}
      responses:
        "200":
          description: an example for given schema
          content:
            '*':
              schema:
                xml:
                  name: root
                  wrapped: true
    options:
      summary: preflight
      responses:
        204:
          description: no content
  /api/configs/{id}:
    get:
      summary: returns the config for given id
      operationId: config
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: content of config
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  provider:
                    type: string
                  time:
                    type: string
                    format: date-time
        "404":
          description: config not found
          content:
            text/plain:
              schema:
                type: string
  /api/configs/{id}/data:
    get:
      summary: returns the config data for given id
      operationId: configdata
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: content of config
          content:
            '*':
              schema:
                type: string
        "404":
          description: config not found
          content:
            text/plain:
              schema:
                type: string