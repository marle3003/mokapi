components:
  pathItems:
    Clusters:
      get:
        summary: Returns a list of Kafka clusters.
        operationId: clusters
        responses:
          '200':
            description: The list of Kafka clusters
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      version:
                        type: string
                      contact:
                        $ref: './common.yml#/components/schemas/Contact'
                    additionalProperties: false

    Topics:
      get:
        summary: Returns the list of topics that belongs to the specified Kafka cluster
        operationId: topics
        parameters:
          - in: path
            name: cluster
            required: true
            schema:
              type: string
        responses:
          '200':
            description: The list of topics
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Topic'
    Topic:
      parameters:
        - in: path
          name: cluster
          required: true
          schema:
            type: string
        - in: path
          name: topic
          required: true
          schema:
            type: string
      get:
        summary: Return the topic with the given topic name
        operationId: topic
        responses:
          '200':
            description: The topic.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Topic'
      post:
        summary: Produce messages to a topic, the partition will be chosen randomly
        operationId: produceTopic
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/Record'
            application/vnd.mokapi.kafka.binary+json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/Record'
        responses:
          '200':
            description: List of partitions and offsets the messages were published to.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    offsets:
                      type: array
                      items:
                        $ref: '#/components/schemas/ProducedRecord'
    Partitions:
      get:
        summary: Return the list of partitions that belong to the specified topic.
        operationId: partitions
        parameters:
          - in: path
            name: cluster
            required: true
            schema:
              type: string
          - in: path
            name: topic
            required: true
            schema:
              type: string
        responses:
          '200':
            description: The list of partitions.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Partition'
    Partition:
      parameters:
        - in: path
          name: cluster
          required: true
          schema:
            type: string
        - in: path
          name: topic
          required: true
          schema:
            type: string
        - in: path
          name: partitionId
          required: true
          schema:
            type: integer
      get:
        summary: Return the partition with the given partition id.
        operationId: partition
        responses:
          '200':
            description: The list of partitions.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Partition'
      post:
        summary: Produce records to specified partition of the topic.
        operationId: producePartition
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/Record'
            application/vnd.mokapi.kafka.binary+json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: '#/components/schemas/Record'
        responses:
          '200':
            description: List of partitions and offsets the records were published to.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    offsets:
                      type: array
                      items:
                        $ref: '#/components/schemas/ProducedRecord'
    Offsets:
      parameters:
        - in: path
          name: cluster
          required: true
          schema:
            type: string
        - in: path
          name: topic
          required: true
          schema:
            type: string
        - in: path
          name: partitionId
          required: true
          schema:
            type: integer
      get:
        summary: Return published records in partition.
        operationId: offsets
        parameters:
          - in: query
            name: offset
            required: false
            schema:
              type: integer
          - in: query
            name: limit
            required: false
            schema:
              type: integer
              default: 10
        responses:
          '200':
            description: The list of records.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Record'
              application/vnd.mokapi.kafka.binary+json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Record'
    Offset:
      parameters:
        - in: path
          name: cluster
          required: true
          schema:
            type: string
        - in: path
          name: topic
          required: true
          schema:
            type: string
        - in: path
          name: partitionId
          required: true
          schema:
            type: integer
        - in: path
          name: offset
          required: true
          schema:
            type: integer
      get:
        summary: Return published record in partition with the specified offset.
        operationId: offset
        responses:
          '200':
            description: The record.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Record'
              application/vnd.mokapi.kafka.binary+json:
                schema:
                  type: object
                  properties:
                    records:
                      type: array
                      items:
                        $ref: '#/components/schemas/Record'

  schemas:
    KafkaInfo:
      allOf:
        - $ref: 'common.yml#/components/schemas/Service'
        - type: object
          properties:
            topics:
              type: array
              items:
                type: string
    Kafka:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        contact:
          type: object
          properties:
            name:
              type: string
            url:
              type: string
              format: uri
            email:
              type: string
              format: email
        servers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              host:
                type: string
              description:
                type: string
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        metrics:
          $ref: 'common.yml#/components/schemas/Metrics'
    Topic:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        partitions:
          type: array
          items:
            $ref: '#/components/schemas/Partition'
        messages:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessageConfig'
        bindings:
          $ref: '#/components/schemas/TopicBindings'
    Partition:
      type: object
      properties:
        id:
          type: integer
        startOffset:
          type: integer
        offset:
          type: integer
        leader:
          $ref:  '#/components/schemas/Broker'
        segments:
          type: integer
    Group:
      type: object
      properties:
        name:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
        coordinator:
          type: string
        leader:
          type: string
        state:
          type: string
        protocol:
          type: string
        topics:
          type: array
          items:
            type: string
    Member:
      type: object
      properties:
        name:
          type: string
        addr:
          type: string
        clientSoftwareName:
          type: string
        clientSoftwareVersion:
          type: string
        heartbeat:
          type: integer
        partitions:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
    Broker:
      type: object
      properties:
        name:
          type: string
        addr:
          type: string
    MessageConfig:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        summary:
          type: string
        description:
          type: string
        key:
          $ref: 'schema.yml#/components/schemas/Schema'
        payload:
          $ref: 'schema.yml#/components/schemas/Schema'
        header:
          $ref: 'schema.yml#/components/schemas/Schema'
        contentType:
          type: string
    TopicBindings:
      partitions:
        type: integer
      retentionBytes:
        type: integer
      retentionMs:
        type: integer
      segmentBytes:
        type: integer
      segmentMs:
        type: integer
      valueSchemaValidation:
        type: boolean
      keySchemaValidation:
        type: boolean
    Record:
      type: object
      properties:
        key: {}
        value: {}
    ProducedRecord:
      type: object
      properties:
        partition:
          type: integer
        offset:
          type: integer
        error:
          type: string
