name: Release alpha
on:
  push:
    branches:
      - v*

jobs:
  release:
    name: Release alpha
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: mokapi
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker alpha image
        run: docker build --build-arg VERSION=${GITHUB_REF##*/v} -t mokapi/mokapi:${GITHUB_REF##*/}-alpha -f ./images/alpha.Dockerfile .
      - name: Test
        run: docker run --rm -d -p 8090:8090 --mount type=bind,source=$(pwd)/examples/mokapi,target=/data --env MOKAPI_Providers_File_Directory=/data mokapi/mokapi:${GITHUB_REF##*/}-alpha
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install and Build
        working-directory: ./webui
        run: |
          npm ci
          npm run copy-docs
          npm run build
      - name: Install Playwright
        working-directory: ./webui
        run: npx playwright install --with-deps
      - name: Run your tests
        working-directory: ./webui
        run: npx playwright test
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: webui/playwright-report
  publish-report:
    name: Publish Playwright Report
    if: "success() || needs.test.result == 'failure'"
    needs: [release]
    runs-on: ubuntu-latest
    env:
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}
    steps:
      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v2dww
        with:
          ref: gh-pages
      - name: Set Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Download Report
        uses: actions/download-artifact@v2
        with:
          name: playwright-report
          path: ${{ env.HTML_REPORT_URL_PATH }}
      - name: Push HTML Report
        timeout-minutes: 3
        # commit report, then try push-rebase-loop until it's able to merge the HTML report to the gh-pages branch
        # this is necessary when this job is running at least twice at the same time (e.g. through two pushes at the same time)
        run: |
          git add .
          git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"
          
          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi
          
            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done
