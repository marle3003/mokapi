<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="1a9601df-4cac-4bc9-9e3a-1ba0e84e507f" name="Default Changelist" comment="refactoring but not all features are working">
      <change afterPath="$PROJECT_DIR$/config/dynamic/file.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/providers/workflow/actions/split.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/providers/workflow/options.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/providers/workflow/scheduler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Taskfile.yml" beforeDir="false" afterPath="$PROJECT_DIR$/Taskfile.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/asyncApi/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/asyncApi/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/configstore.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/filewatcher.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/ldap/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/ldap/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/mokapi/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/mokapi/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/mokapi/unmarshal.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/mokapi/unmarshal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/openapi/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/openapi/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/delay.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/echo.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/fileExists.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/getcontext.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/json.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/mustache.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/random.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/readFile.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/yaml.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/ast/ast.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/ast/scope.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/ast/walk.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/parser/config_parser.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/parser/error.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/parser/parser.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/parser/parser_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/argument.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/argument_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/assign.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/assign_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/binary.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/binary_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/call.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/closure.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/envvars.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/expression.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/index.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/path.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/range.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/runtime.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/runtime_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/sequence.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/stack.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/stage.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/step.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/string.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/string_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/runtime/visitor_mock_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/scanner/scanner.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/scanner/scanner_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/token/position.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/token/token.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/array.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/bool.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/closure.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/collection.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/convert.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/convert_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/expando.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/keyvalue.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/node.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/node_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/number.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/object.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/path.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/pathchildren.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/predicate.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/reference.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/reflect.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/step.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/types/string.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/pipeline.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/scheduler.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/action.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/action.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/functions/functions.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/functions/functions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/Scope.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/runtime/Scope.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/format.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/runtime/format.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/operator/add_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/runtime/operator/add_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/options.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/runtime.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/runtime/runtime.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/shell.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/runtime/shell.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/workflow/runtime/summary.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/workflow/runtime/summary.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/api/dashboard_data.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/dashboard_data.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/binding.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/binding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/producer.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/producer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/binding.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/binding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/operationHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/operationHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/parse_param_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/parse_param_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/path_param_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/path_param_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/query_param_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/query_param_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/views/dashboard/HttpRequest.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/views/dashboard/HttpRequest.vue" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
        <option value="Vue Single File Component" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Go" />
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1m40RSdtdDAxQq3OJ6eyNX6aqtz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="NewWatcherDialog.advanced.open" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="js.buildTools.gulp.gulp_package_dir" value="" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/providers/workflow" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.tabs" />
    <property name="ts.external.directory.path" value="C:\Program Files\JetBrains\GoLand 2020.3\plugins\JavaScriptLanguage\jsLanguageServicesImpl\external" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Projekte\mokapi\providers\workflow" />
      <recent name="D:\Projekte\mokapi\providers\workflow\runtime\operator" />
      <recent name="D:\Projekte\mokapi\providers\workflow\lang\token" />
      <recent name="D:\Projekte\mokapi\providers\workflow\lang\scanner" />
      <recent name="D:\Projekte\mokapi" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Projekte\mokapi\providers\workflow" />
      <recent name="D:\Projekte\mokapi\providers\workflow\runtime" />
      <recent name="D:\Projekte\mokapi\providers\workflow\path\urlpath" />
      <recent name="D:\Projekte\mokapi\providers\workflow\event" />
      <recent name="D:\Projekte\mokapi\docs\actions" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test mokapi/server/web">
    <configuration name="go build mokapi/cmd/mokapi" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="mokapi" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <parameters value="--Log.Format=json --Api.Port=8081" />
      <envs>
        <env name="MOKAPI_Log.Level" value="debug" />
        <env name="MOKAPI_Providers.File.Directory" value="data" />
        <env name="DEVUSER" value="lehmannmar" />
      </envs>
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$" />
      <package value="mokapi/cmd/mokapi" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go test mokapi/providers/workflow/runtime/operator" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mokapi" />
      <working_directory value="$PROJECT_DIR$/providers/workflow/runtime/operator" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="mokapi/providers/workflow/runtime/operator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go test mokapi/server/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mokapi" />
      <working_directory value="$PROJECT_DIR$/server/web" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="mokapi/server/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test mokapi/server/web" />
        <item itemvalue="Go Test.go test mokapi/providers/workflow/runtime/operator" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="fixed action" />
    <MESSAGE value="fixed tasks" />
    <MESSAGE value="fixed npm packages" />
    <MESSAGE value="fixed npm install" />
    <MESSAGE value="fixed case sensitive" />
    <MESSAGE value="added go" />
    <MESSAGE value="fixed line separator" />
    <MESSAGE value="update workspace" />
    <MESSAGE value="removed hooks" />
    <MESSAGE value="added go-bindata" />
    <MESSAGE value="updated action" />
    <MESSAGE value="added bin directory" />
    <MESSAGE value="added docker" />
    <MESSAGE value="replace pipeline with actions. Work in progress" />
    <MESSAGE value="added new ast objects&#10;added operator implementations&#10;added documentation" />
    <MESSAGE value="fixed link" />
    <MESSAGE value="fixed typo" />
    <MESSAGE value="changed theming&#10;extended features Mokapi actions&#10;extended documentation" />
    <MESSAGE value="updated actions&#10;updated webui" />
    <MESSAGE value="updated go releaser" />
    <MESSAGE value="added license" />
    <MESSAGE value="fixed bug" />
    <MESSAGE value="added commit action" />
    <MESSAGE value="fixed name" />
    <MESSAGE value="fixed test action" />
    <option name="LAST_COMMIT_MESSAGE" value="fixed test action" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/workflow/runtime/shell.go</url>
          <line>55</line>
          <option name="timeStamp" value="34" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="DlvErrorBreakpoint" />
      </default-breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="*(*&quot;mokapi/config/dynamic/asyncApi.Log&quot;)(824638359304)" />
        <watch expression="*(*&quot;[]*gopkg.in/yaml%2ev3.Node&quot;)(824638755744)" />
      </configuration>
    </watches-manager>
  </component>
</project>