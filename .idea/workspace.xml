<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="1a9601df-4cac-4bc9-9e3a-1ba0e84e507f" name="Default Changelist" comment="refactoring but not all features are working">
      <change afterPath="$PROJECT_DIR$/docs/config.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/openapi.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/pipeline/steps.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/asyncapi/models.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/kafka/topic.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/asyncApi/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/asyncApi/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/asyncApi/kafka.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/asyncApi/kafka.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/asyncApi/refs.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/asyncApi/refs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/asyncApi/unmarshal.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/asyncApi/unmarshal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/configstore.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/configstore.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/ldap/unmarshal.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/ldap/unmarshal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/dynamic/mokapi/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/dynamic/mokapi/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docs/config.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/pipeline/pipeline.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/pipeline/pipeline.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/test.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/welcome.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/welcome.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/metric.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/metric.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/delay.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/basics/delay.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/env.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/fileExists.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/basics/fileExists.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/readFile.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/basics/readFile.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/basics/yaml.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/basics/yaml.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/parser/config_parser.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/lang/parser/config_parser.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/lang/parser/parser.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/lang/parser/parser.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/providers/pipeline/pipeline.go" beforeDir="false" afterPath="$PROJECT_DIR$/providers/pipeline/pipeline.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/api/binding.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/binding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/api/dashboard_data.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/dashboard_data.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/api/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/openapi/models.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/binding.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/binding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/broker.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/broker.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/client_handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/client_handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/group.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/group.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/kafka/producer.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/kafka/producer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/binding.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/binding.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/operationHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/operationHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/web/webServiceHandler.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/web/webServiceHandler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/build/webpack.base.conf.js" beforeDir="false" afterPath="$PROJECT_DIR$/webui/build/webpack.base.conf.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/webui/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/App.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/App.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/assets/logo.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/assets/prism.css" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/assets/prism.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/assets/prism.js" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/assets/prism.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/assets/vars.css" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/assets/vars.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/Models.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/Models.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/RequestBody.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/RequestBody.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/Schema.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/Schema.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/ServiceInfo.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/ServiceInfo.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/TimeChart.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/TimeChart.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/TopHeader.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/TopHeader.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/components/response.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/components/response.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/main.js" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/main.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/mixins/Api.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/mixins/Api.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/router/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/router/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/views/Dashboard.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/views/Dashboard.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/views/Docs.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/views/Docs.vue" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/webui/src/views/ServiceList.vue" beforeDir="false" afterPath="$PROJECT_DIR$/webui/src/views/ServiceList.vue" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1m40RSdtdDAxQq3OJ6eyNX6aqtz" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="NewWatcherDialog.advanced.open" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="js.buildTools.gulp.gulp_package_dir" value="" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/webui/src/assets/docs" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.tabs" />
    <property name="ts.external.directory.path" value="C:\Program Files\JetBrains\GoLand 2020.3\plugins\JavaScriptLanguage\jsLanguageServicesImpl\external" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Projekte\mokapi\webui\src\assets\docs" />
      <recent name="D:\Projekte\mokapi\data\wams" />
      <recent name="D:\Projekte\mokapi\config\dynamic\asyncApi" />
      <recent name="D:\Projekte\mokapi\config\dynamic\ldap" />
      <recent name="D:\Projekte\mokapi\server\kafka" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Projekte\mokapi\server\api\openapi" />
      <recent name="D:\Projekte\mokapi\server\api\models" />
      <recent name="D:\Projekte\mokapi\providers\pipeline" />
      <recent name="D:\Projekte\mokapi\config\dynamic\ldap" />
      <recent name="D:\Projekte\mokapi\config\dynamic\mokapi" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build mokapi/cmd/mokapi">
    <configuration name="go build mokapi/cmd/mokapi" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="mokapi" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <parameters value="--Log.Format=json --Api.Port=8081" />
      <envs>
        <env name="MOKAPI_Log.Level" value="debug" />
        <env name="MOKAPI_Providers.File.Directory" value="data" />
        <env name="DEVUSER" value="lehmannmar" />
      </envs>
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$" />
      <package value="mokapi/cmd/mokapi" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseQuery in mokapi/server/web" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mokapi" />
      <working_directory value="$PROJECT_DIR$/server/web" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="mokapi/server/web" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestParseQuery\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStringFormat in mokapi/providers/pipeline/lang/runtime" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mokapi" />
      <working_directory value="$PROJECT_DIR$/providers/pipeline/lang/runtime" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="mokapi/providers/pipeline/lang/runtime" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestStringFormat\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build mokapi/cmd/mokapi" />
      <item itemvalue="Go Test.TestParseQuery in mokapi/server/web" />
      <item itemvalue="Go Test.TestStringFormat in mokapi/providers/pipeline/lang/runtime" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestStringFormat in mokapi/providers/pipeline/lang/runtime" />
        <item itemvalue="Go Test.TestParseQuery in mokapi/server/web" />
        <item itemvalue="Go Build.go build mokapi/cmd/mokapi" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="refactoring but not all features are working" />
    <MESSAGE value="removed features middleware and data provider&#10;introduced feature pipeline&#10;removed examples, must be reworked&#10;fixed some eslint errors" />
    <MESSAGE value="refactored server bindings&#10;added skippable config files/dirs with prefix '_'&#10;added requestBody property&#10;optimized pipeline name usages&#10;added pipeline steps&#10;added feature when, unary operation to pipeline&#10;added pipeline string format" />
    <MESSAGE value="added feature pathing to pipeline&#10;added operators &amp;&amp; and || to pipeline" />
    <MESSAGE value="refactored pipeline: replaced participle with own parser" />
    <MESSAGE value="extended pipeline:&#10;- closure&#10;- binary operations&#10;- pathing" />
    <MESSAGE value="extended pipeline&#10;added query and path parameter" />
    <MESSAGE value="various bugfixes and refactored package structure" />
    <MESSAGE value="optimized error reporting&#10;fixed some bugs" />
    <MESSAGE value="fixed ldap&#10;added json config support&#10;fixed openapi config&#10;fixed webui" />
    <MESSAGE value="extended pipeline:&#10;- added vars&#10;- optimized pathing&#10;- added tests&#10;extended webui" />
    <MESSAGE value="added tests with bugfixes" />
    <MESSAGE value="added tests&#10;extended convert" />
    <MESSAGE value="bugfixes&#10;added tests&#10;added range expression" />
    <MESSAGE value="started kafka implementation" />
    <MESSAGE value="extended kafka implementation" />
    <MESSAGE value="refactored mainly config package" />
    <MESSAGE value="refactored asyncapi&#10;added scheduler support&#10;added $ref support in openapi" />
    <MESSAGE value="extended kafka supporting retention policy&#10;some bugfixes" />
    <MESSAGE value="some bugfixes" />
    <MESSAGE value="updated web ui (dashboard)" />
    <option name="LAST_COMMIT_MESSAGE" value="updated web ui (dashboard)" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/alecthomas/participle/v2@v2.0.0-alpha3/parser.go</url>
          <line>188</line>
          <option name="timeStamp" value="225" />
        </line-breakpoint>
        <line-breakpoint type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/alecthomas/participle/v2@v2.0.0-alpha3/lexer/peek.go</url>
          <line>27</line>
          <option name="timeStamp" value="226" />
        </line-breakpoint>
        <line-breakpoint type="DlvLineBreakpoint">
          <condition expression="name == &quot;CategoryList&quot; || name == &quot;Category&quot;" />
          <url>file://$PROJECT_DIR$/models/rest/schema.go</url>
          <line>9</line>
          <option name="timeStamp" value="1066" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/pipeline/lang/types/pathchildren.go</url>
          <line>127</line>
          <option name="timeStamp" value="1733" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/encoding/xml.go</url>
          <line>210</line>
          <option name="timeStamp" value="1747" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$USER_HOME$/go/pkg/mod/github.com/brianvoe/gofakeit/v4@v4.2.3/generate.go</url>
          <line>19</line>
          <option name="timeStamp" value="1762" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/pipeline/lang/parser/parser.go</url>
          <line>422</line>
          <option name="timeStamp" value="1805" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/pipeline/lang/parser/parser.go</url>
          <line>478</line>
          <option name="timeStamp" value="1806" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/pipeline/basics/delay.go</url>
          <line>68</line>
          <option name="timeStamp" value="1810" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/pipeline/basics/delay.go</url>
          <line>48</line>
          <option name="timeStamp" value="1813" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/config/dynamic/configstore.go</url>
          <line>379</line>
          <option name="timeStamp" value="1816" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/providers/pipeline/basics/mustache.go</url>
          <line>24</line>
          <option name="timeStamp" value="1817" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="DlvErrorBreakpoint" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>